#!/usr/bin/env bash

if [[ -z "$BOT_HOME" ]]; then
  echo "BOT_HOME is not defined";
  exit
fi

if [[ ! -d "$BOT_HOME" ]]; then
  echo "BOT_HOME ($BOT_HOME) is not a directory";
  exit
fi

if [[ ! -f "$BOT_HOME/token" ]]; then
  echo "Not token found in BOT_HOME/token"
  exit
fi

TOKEN="$(cat "$BOT_HOME/token")"
PREVIOUS_UPDATE="$BOT_HOME/lastupdate"
URL='https://api.telegram.org/bot'
PEOPLE="$BOT_HOME/people"

getPerson(){
  grep "$1" "$PEOPLE" | head -n1 | cut -d':' -f2
}

pe()
{
  if ! grep -q "$1" "$PEOPLE" ; then
    echo "Person not found: $1"
    exit 1
  fi
}

getMe() {
    curl -s "$URL$TOKEN/getMe" | jq -r '"\(.result.first_name) - \(.result.username)"'
}

sendMessage() {
  pe "$1"
  curl -s "$URL$TOKEN/sendMessage" -d chat_id="$(getPerson "$1")" -d text="$2" -d parse_mode="Markdown" | jq '.ok'
}

sendPhoto() {
  pe "$1"
  curl -s "$URL$TOKEN/sendPhoto" -F chat_id="$(getPerson "$1")" -F photo="@$2" | jq '.ok'
}

sendDocument() {
  pe "$1"
  curl -s "$URL$TOKEN/sendDocument" -F chat_id="$(getPerson "$1")" -F document="@$2" | jq '.ok'
}

sendLocation() {
  pe "$1"
  curl -s "$URL$TOKEN/sendLocation" -d chat_id="$(getPerson "$1")" -d latitude="$2" -d longitude="$3" | jq '.ok'
}

getUpdates() {
# { "update": ".update_id", "recevied_on": ".message.date", "userid": ".message.from.id", "username": ".message.from.username", "message": ".message.text" }

    last="0"
    if [ -e "$PREVIOUS_UPDATE" ]; then
        last="$(cat "$PREVIOUS_UPDATE")"
    fi
    messages="$(curl -s "$URL$TOKEN/getUpdates?timeout=30&offset=$last" -d update_id="$1")"
    echo "$messages" | jq -c '.result[] | { "update": .update_id, "recevied_on": .message.date, "userid": .message.from.id, "username": .message.from.username, "message": .message.text}'
    echo "$messages" | jq -r '.result[] | "\(.message.from.username):\(.message.from.id)"' | while read -r a; do
        echo "$a" >> "$PEOPLE"
    done
    last="$(echo "$messages" | jq -r '.result[] | "\(.update_id)"' | while read -r a; do
        echo "$a"
    done | sort -n | tail -n1)"
    echo "$((last+1))" > "$PREVIOUS_UPDATE"

    sort -u "$PEOPLE" > "$PEOPLE.tmp"
    mv "$PEOPLE.tmp" "$PEOPLE"
}

case $1 in
    me)
      getMe
      ;;
    m|msg)
      sendMessage "$2" "$3"
      ;;
    i|img)
      sendPhoto "$2" "$3"
      ;;
    f|doc)
      sendDocument "$2" "$3"
      ;;
    l|loc)
      sendLocation "$2" "$3" "$4"
      ;;
    u|get)
      getUpdates "$2"
      ;;
    p|people)
      if [ -e "$PEOPLE" ]; then
        echo "People:"
        cat "$PEOPLE"
      else
        echo "No People Saved"
      fi
      ;;
    h|help|-h|--help)
      echo "me - Get info about the current bot"
      echo "m|msg <person_id> 'message' - send a message"
      echo "i|img <person_id> path - send an image"
      echo "f|doc <person_id> path - send a document"
      echo "l|loc <person_id> <latitude> <longitude> - send a location"
      echo "p|people - list people we can talk to"
      echo "u|get|* - get all unreceived messages"
      ;;
    *)
      getUpdates 0
      ;;
esac
